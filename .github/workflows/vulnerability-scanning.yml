env:
  TEST_IMAGE_NAME: local/openrouteservice:test
jobs:
  Anchore-Docker-Image-Scan:
    name: Grype scan ${{ matrix.platform }} image
    needs:
    - prepare_environment
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout repository
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up QEMU for ${{ matrix.platform }}
      uses: docker/setup-qemu-action@v3
      with:
        platforms: ${{ matrix.platform }}
    - continue-on-error: true
      id: buildx
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true
    - continue-on-error: true
      name: Build image for ${{ matrix.platform }}
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        context: .
        load: true
        platforms: ${{ matrix.platform }}
        push: false
        tags: ${{ needs.prepare_environment.outputs.test_image_name }}
    - continue-on-error: true
      name: Run the Anchore Grype scan action to console
      uses: anchore/scan-action@v3
      with:
        fail-build: false
        image: ${{ needs.prepare_environment.outputs.test_image_name }}
        output-format: table
    - continue-on-error: true
      id: scan
      name: Run the Anchore Grype scan action to SARIF
      uses: anchore/scan-action@v3
      with:
        fail-build: false
        image: ${{ needs.prepare_environment.outputs.test_image_name }}
        output-format: sarif
    - continue-on-error: true
      name: Upload vulnerability report
      uses: github/codeql-action/upload-sarif@v2
      with:
        category: Grype-Docker-Image-${{ matrix.platform }}
        sarif_file: ${{ steps.scan.outputs.sarif }}
    strategy:
      matrix:
        exclude:
        - isDraftPR: true
          platform: linux/arm64/v8
        image:
        - ubuntu-latest
        isDraftPR:
        - ${{ github.event_name == 'pull_request' && github.event.pull_request.draft
          == true }}
        platform:
        - linux/amd64
        - linux/arm64/v8
  Anchore-Jar-War-Build-Scan:
    name: Grype scan jar and war file
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      name: Build jar and war file
      run: 'mvn -B package -DskipTests -DCI=true

        # Copy the .jar file to a custom location where grype can find it

        mkdir -p ors-api/target/grype

        cp ors-api/target/ors.jar ors-api/target/grype/ors.jar

        mvn -B package -DskipTests -PbuildWar -DCI=true

        cp ors-api/target/ors.war ors-api/target/grype/ors.war

        '
    - continue-on-error: true
      name: Run the Anchore Grype scan action to console
      uses: anchore/scan-action@v3
      with:
        fail-build: false
        output-format: table
        path: ors-api/target/grype/
    - continue-on-error: true
      id: scan
      name: Run the Anchore Grype scan action to SARIF
      uses: anchore/scan-action@v3
      with:
        fail-build: false
        output-format: sarif
        path: ors-api/target/grype/
    - continue-on-error: true
      name: Upload vulnerability report
      uses: github/codeql-action/upload-sarif@v2
      with:
        category: Grype-War-Scan
        sarif_file: ${{ steps.scan.outputs.sarif }}
  prepare_environment:
    name: Prepare the environment variables
    outputs:
      test_image_name: ${{ env.TEST_IMAGE_NAME }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      run: 'echo "Publish environment variables"

        '
name: Vulnerability scan
on:
  repository_dispatch:
    types: trigger-ga___vulnerability-scanning.yml
permissions:
  contents: read
