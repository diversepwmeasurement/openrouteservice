jobs:
  build:
    if: inputs.ignore-24h-commit-check || needs.check-commits.outputs.new_commits
      == 'true'
    needs: check-commits
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch || 'main' }}
        repository: ${{ inputs.repository || 'GIScience/openrouteservice' }}
    - continue-on-error: true
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3.0.0
    - continue-on-error: true
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.0.0
    - continue-on-error: true
      name: Login to DockerHub
      uses: docker/login-action@v3.0.0
      with:
        password: ${{ secrets.DOCKER_PASSWORD }}
        username: ${{ secrets.DOCKER_USERNAME }}
    - continue-on-error: true
      name: Build and push
      uses: docker/build-push-action@v5.1.0
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        context: .
        platforms: linux/amd64,linux/arm64/v8
        provenance: false
        push: false
        tags: ${{ secrets.DOCKER_USERNAME }}/openrouteservice:${{ inputs.tag || 'nightly'
          }}
  check-commits:
    outputs:
      new_commits: ${{ steps.check.outputs.NEW_COMMITS }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch || 'main' }}
        repository: ${{ inputs.repository || 'GIScience/openrouteservice' }}
    - continue-on-error: true
      id: check
      name: Check for new commits since 24 h ago
      run: "export LOG_LINES=$(git log --oneline --since '24 hours ago')\nexport NUM_LINES=$(echo\
        \ \"$LOG_LINES\" | grep -c .)\nif [ \"$NUM_LINES\" -eq \"0\" ]; then\n  export\
        \ NEW_COMMITS=\"false\"\nelse\n  export NEW_COMMITS=\"true\"\nfi\necho \"\
        NEW_COMMITS=$NEW_COMMITS\" >> \"$GITHUB_OUTPUT\"\n"
name: Docker Nightly Image CI
on:
  repository_dispatch:
    types: trigger-ga___docker-nightly-image.yml
run-name: Build ${{ inputs.branch }} - ${{ inputs.user }}
