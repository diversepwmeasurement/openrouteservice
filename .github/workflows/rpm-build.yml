env:
  HEALTH_WAIT_TIME: 200
jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Build Java WAR
      run: mvn clean package -DskipTests
    - continue-on-error: true
      name: Get mvn project.version
      run: 'projectVersion=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout
        | sed ''s/-SNAPSHOT/.SNAPSHOT/g'')

        echo "ORS_VERSION=$projectVersion" >> "$GITHUB_ENV"

        '
    - continue-on-error: true
      name: RPMBuild
      run: 'export ORS_VERSION=${{ env.ORS_VERSION }}

        sudo apt-get install rpm

        mkdir -p ~/rpmbuild/{BUILD,RPMS,SPECS,SRPMS}

        cp ors-api/target/ors.war ~/rpmbuild/BUILD/

        rpmbuild -bb .rpm-packaging/ors-war.spec

        mv ~/rpmbuild/RPMS/noarch/openrouteservice-${{ env.ORS_VERSION }}-1.noarch.rpm
        .rpm-packaging/

        '
    - continue-on-error: true
      name: Test with Tomcat
      run: 'cp ors-api/src/test/files/elevation/srtm_38_03.gh .rpm-packaging/

        cp ors-api/src/test/files/heidelberg.osm.gz .rpm-packaging/

        cd .rpm-packaging

        docker build . -t ors-rpm-tomcat --build-arg ors_version=${{ env.ORS_VERSION
        }}

        docker run -it -d -p 8080:8080 --name ors-tomcat ors-rpm-tomcat

        ../.github/utils/url_check.sh 127.0.0.1 8080 /ors/v2/health 200 ${{ env.HEALTH_WAIT_TIME
        }}

        '
name: Package Java WAR into RPM
on:
  repository_dispatch:
    types: trigger-ga___rpm-build.yml
